package ru.job4j.collection;

public class SimpleStack<T> {

    private final ForwardLinked<T> linked = new ForwardLinked<>();

    public T pop() {
        return linked.deleteFirst();
    }

    public void push(T value) {
        linked.addFirst(value);
    }

    public boolean isEmpty() {
        return linked.isEmpty();
    }
}
/*
* Класс SimpleStack реализует стек. Стек - это абстрактная структура данных,
* в которой элементы добавляются и удаляются в соответствии с принципом LIFO
* (Last In, First Out), т.е. Последний добавленный элемент является первым,
* который будет удалён.

Класс SimpleStack использует класс ForwardLinked в качестве внутренней структуры
* данных для хранения элементов стека.

- push(T value): добавляет элемент value в начало списка = в вершину стека.
* Это делается с помощью метода addFirst класса ForwardLinked.
- pop(): удаляет первый элемент из списка = из вершины стека, и возвращает его значение.
* Это делается с помощью метода deleteFirst класса ForwardLinked.
*
Таким образом, класс SimpleStack предоставляет базовые операции стека: добавление элемента
* в стек (push) и удаление элемента из стека (pop), используя односвязный список в качестве
* внутренней структуры данных.

Использование односвязного списка в качестве внутренней структуры данных позволяет реализовывать
* стек с эффективными операциями добавления и удаления элементов, поскольку добавление элемента
* в начало списка и удаление первого элемента из списка выполняются за константное время (O(1)).*/